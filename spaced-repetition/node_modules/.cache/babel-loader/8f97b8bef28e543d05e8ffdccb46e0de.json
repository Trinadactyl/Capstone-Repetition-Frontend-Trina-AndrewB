{"ast":null,"code":"import jwtDecode from 'jwt-decode';\nimport config from '../config';\n\nvar _timeoutId;\n\nvar _TEN_SECONDS_IN_MS = 10000;\nvar TokenService = {\n  saveAuthToken: function saveAuthToken(token) {\n    window.localStorage.setItem(config.TOKEN_KEY, token);\n  },\n  getAuthToken: function getAuthToken() {\n    return window.localStorage.getItem(config.TOKEN_KEY);\n  },\n  clearAuthToken: function clearAuthToken() {\n    window.localStorage.removeItem(config.TOKEN_KEY);\n  },\n  hasAuthToken: function hasAuthToken() {\n    return !!TokenService.getAuthToken();\n  },\n  parseJwt: function parseJwt(jwt) {\n    return jwtDecode(jwt);\n  },\n  parseAuthToken: function parseAuthToken() {\n    var authToken = TokenService.getAuthToken();\n    if (authToken) return TokenService.parseJwt(authToken);else return undefined;\n  },\n  _getMsUntilExpiry: function _getMsUntilExpiry(payload) {\n    return payload.exp * 1000 - Date.now();\n  },\n  queueCallbackBeforeExpiry: function queueCallbackBeforeExpiry(callback) {\n    var msUntilExpiry = TokenService._getMsUntilExpiry(TokenService.parseAuthToken());\n\n    _timeoutId = setTimeout(callback, msUntilExpiry - _TEN_SECONDS_IN_MS);\n  },\n  clearCallbackBeforeExpiry: function clearCallbackBeforeExpiry() {\n    clearTimeout(_timeoutId);\n  }\n};\nexport default TokenService;","map":{"version":3,"sources":["/Users/andrewburchett/thinkful/capstone-repetition-frontend/spaced-repetition/src/services/token-service.js"],"names":["jwtDecode","config","_timeoutId","_TEN_SECONDS_IN_MS","TokenService","saveAuthToken","token","window","localStorage","setItem","TOKEN_KEY","getAuthToken","getItem","clearAuthToken","removeItem","hasAuthToken","parseJwt","jwt","parseAuthToken","authToken","undefined","_getMsUntilExpiry","payload","exp","Date","now","queueCallbackBeforeExpiry","callback","msUntilExpiry","setTimeout","clearCallbackBeforeExpiry","clearTimeout"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,WAAnB;;AAEA,IAAIC,UAAJ;;AACA,IAAMC,kBAAkB,GAAG,KAA3B;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,aADmB,yBACLC,KADK,EACE;AACnBC,IAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4BR,MAAM,CAACS,SAAnC,EAA8CJ,KAA9C;AACD,GAHkB;AAInBK,EAAAA,YAJmB,0BAIJ;AACb,WAAOJ,MAAM,CAACC,YAAP,CAAoBI,OAApB,CAA4BX,MAAM,CAACS,SAAnC,CAAP;AACD,GANkB;AAOnBG,EAAAA,cAPmB,4BAOF;AACfN,IAAAA,MAAM,CAACC,YAAP,CAAoBM,UAApB,CAA+Bb,MAAM,CAACS,SAAtC;AACD,GATkB;AAUnBK,EAAAA,YAVmB,0BAUJ;AACb,WAAO,CAAC,CAACX,YAAY,CAACO,YAAb,EAAT;AACD,GAZkB;AAanBK,EAAAA,QAbmB,oBAaVC,GAbU,EAaL;AACZ,WAAOjB,SAAS,CAACiB,GAAD,CAAhB;AACD,GAfkB;AAgBnBC,EAAAA,cAhBmB,4BAgBF;AACf,QAAMC,SAAS,GAAGf,YAAY,CAACO,YAAb,EAAlB;AACA,QAAIQ,SAAJ,EACE,OAAOf,YAAY,CAACY,QAAb,CAAsBG,SAAtB,CAAP,CADF,KAGE,OAAOC,SAAP;AACH,GAtBkB;AAuBnBC,EAAAA,iBAvBmB,6BAuBDC,OAvBC,EAuBQ;AACzB,WAAQA,OAAO,CAACC,GAAR,GAAc,IAAf,GAAuBC,IAAI,CAACC,GAAL,EAA9B;AACD,GAzBkB;AA0BnBC,EAAAA,yBA1BmB,qCA0BOC,QA1BP,EA0BiB;AAClC,QAAMC,aAAa,GAAGxB,YAAY,CAACiB,iBAAb,CACpBjB,YAAY,CAACc,cAAb,EADoB,CAAtB;;AAGAhB,IAAAA,UAAU,GAAG2B,UAAU,CAACF,QAAD,EAAWC,aAAa,GAAGzB,kBAA3B,CAAvB;AACD,GA/BkB;AAgCnB2B,EAAAA,yBAhCmB,uCAgCS;AAC1BC,IAAAA,YAAY,CAAC7B,UAAD,CAAZ;AACD;AAlCkB,CAArB;AAqCA,eAAeE,YAAf","sourcesContent":["import jwtDecode from 'jwt-decode'\nimport config from '../config'\n\nlet _timeoutId\nconst _TEN_SECONDS_IN_MS = 10000\n\nconst TokenService = {\n  saveAuthToken(token) {\n    window.localStorage.setItem(config.TOKEN_KEY, token)\n  },\n  getAuthToken() {\n    return window.localStorage.getItem(config.TOKEN_KEY)\n  },\n  clearAuthToken() {\n    window.localStorage.removeItem(config.TOKEN_KEY)\n  },\n  hasAuthToken() {\n    return !!TokenService.getAuthToken()\n  },\n  parseJwt(jwt) {\n    return jwtDecode(jwt)\n  },\n  parseAuthToken() {\n    const authToken = TokenService.getAuthToken()\n    if (authToken)\n      return TokenService.parseJwt(authToken)\n    else\n      return undefined\n  },\n  _getMsUntilExpiry(payload) {\n    return (payload.exp * 1000) - Date.now()\n  },\n  queueCallbackBeforeExpiry(callback) {\n    const msUntilExpiry = TokenService._getMsUntilExpiry(\n      TokenService.parseAuthToken()\n    )\n    _timeoutId = setTimeout(callback, msUntilExpiry - _TEN_SECONDS_IN_MS)\n  },\n  clearCallbackBeforeExpiry() {\n    clearTimeout(_timeoutId)\n  },\n}\n\nexport default TokenService\n"]},"metadata":{},"sourceType":"module"}